version: '3.3'
services:
  webapp:
    restart: always
    image: "carrefour.app"              #第一种模式，直接读取镜像
    #container_name: "carrefourapp"     #第二种模式，自己构造镜像
    #build:
      #context: .
      #dockerfile: Dockerfile
    ports:
      - "8085:80"
    links:
      - rabbitmq
    volumes: 
      #- "./log:/gary/carrefour/log"
      - "./appsettings.json:/gary/carrefour"
  rabbitmq:
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_VHOST: "/Carrefour_Virtual_host"
      RABBITMQ_DEFAULT_USER: "carrefour"
      RABBITMQ_DEFAULT_PASS: "carrefour"
    image: "rabbitmq:3.7.16-management"
    restart: always
    volumes:
      - "./data:/var/lib/rabbitmq"
      - "./log:/var/log/rabbitmq/log"
    ports:
      - "15672:15672"
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
  mysql:
    hostname: mysql
    image: "mysql:5.7.16"
    container_name: my_mysql
    restart: always
    volumes:
      - ./mydir:/mydir
      - ./datadir:/var/lib/mysql
      - ./conf/my.cnf:/etc/my.cnf
      #      数据库还原目录 可将需要还原的sql文件放在这里
      - /docker/mysql/source:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=mydb"
      - "TZ=123456"
    ports:
      - 3306:3306
  redis:
    hostname: myredis
    image: redis
    container_name: redis
    restart: always
    volumes:
      - ./conf/redis.conf:/etc/redis/redis.conf:rw
      - ./data:/data:rw
    command:
      redis-server /etc/redis/redis.conf --appendonly yes
    ports:
      - 6379:6379
    networks:
      - net_db
  mongo_local:
    image: mongo:latest
    container_name: mymongodb
    restart: alway
    volumes:
      - "./mongodb/db:/data/db"
    ports:
      - "27017:27017"
    networks:
      net_db:
networks:
  net_db:
    driver:bridge